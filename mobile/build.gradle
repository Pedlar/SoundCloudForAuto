apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSDK
    defaultConfig {
        applicationId "org.notlocalhost.soundcloud.auto"
        minSdkVersion rootProject.ext.minSDK
        targetSdkVersion rootProject.ext.targetSDK
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SC_CLIENT_ID", scApiClientId)
            buildConfigField("String", "SC_CLIENT_SECRET", scApiClientSecret)
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "SC_CLIENT_ID", scApiClientId)
            buildConfigField("String", "SC_CLIENT_SECRET", scApiClientSecret)
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(path: ':soundcloud-api-wrapper')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.core:core-ktx:1.2.0-alpha01'
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"
    implementation 'androidx.media:media:1.1.0-beta01'

    implementation "com.uber.autodispose:autodispose:$autoDispose"
    implementation "com.uber.autodispose:autodispose-lifecycle:$autoDispose"
    implementation "com.uber.autodispose:autodispose-android:$autoDispose"
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$autoDispose"

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"

    testImplementation "io.mockk:mockk:$mockKVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'
}
